import org.example.MyMvn.Count;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;

public class CountTest {
    Count service = new Count();
    @ParameterizedTest
    @CsvSource({
            "3,10000,3000,20000",
            "2,100000,60000,150000",
    })
    public void calculateTestCount(int expected,int income,int expenses,int treshold){
        int actual = Count.calculate(income,expenses,treshold);
        Assertions.assertEquals(expected,actual);

    }


    //Месяц 1. Денег 0. Придётся работать. Заработал +10000, потратил -3000
    // Месяц 2. Денег 7000. Придётся работать. Заработал +10000, потратил -3000
    //Месяц 3. Денег 14000. Придётся работать. Заработал +10000, потратил -3000
    // Месяц 4. Денег 21000. Буду отдыхать. Потратил -3000, затем ещё -12000
    // Месяц 5. Денег 6000. Придётся работать. Заработал +10000, потратил -3000
    // Месяц 6. Денег 13000. Придётся работать. Заработал +10000, потратил -3000
    // Месяц 7. Денег 20000. Буду отдыхать. Потратил -3000, затем ещё -11334
    // Месяц 8. Денег 5666. Придётся работать. Заработал +10000, потратил -3000
    // Месяц 9. Денег 12666. Придётся работать. Заработал +10000, потратил -3000
    // Месяц 10. Денег 19666. Придётся работать. Заработал +10000, потратил -3000
    // Месяц 11. Денег 26666. Буду отдыхать. Потратил -3000, затем ещё -15778
    // Месяц 12. Денег 7888. Придётся работать. Заработал +10000, потратил -3000
}
